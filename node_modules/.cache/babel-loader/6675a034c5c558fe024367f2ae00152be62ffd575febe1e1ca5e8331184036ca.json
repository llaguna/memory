{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\Reactjs\\\\memory\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from './Components/Card';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n  useEffect(() => {\n    async function getImages() {\n      const res = await fetch('https://fed-team.modyo.cloud/api/content/spaces/animals/types/game/entries?per_page=9');\n      const data = await res.json();\n      let urls = [];\n      let j = 0;\n      for (let i = 0; i < 18; ++i) {\n        if (i != 0 && i != 1 && i % 2 == 0) ++j;\n        urls[i] = data.entries[j].fields.image.url;\n      }\n      const animals = [{\n        src: urls[0],\n        name: 'Bear'\n      }, {\n        src: urls[1],\n        name: 'Bear'\n      }, {\n        src: urls[2],\n        name: 'Bird'\n      }, {\n        src: urls[3],\n        name: 'Bird'\n      }, {\n        src: urls[4],\n        name: 'Cat'\n      }, {\n        src: urls[5],\n        name: 'Cat'\n      }, {\n        src: urls[6],\n        name: 'Deer'\n      }, {\n        src: urls[7],\n        name: 'Deer'\n      }, {\n        src: urls[8],\n        name: 'Dog'\n      }, {\n        src: urls[9],\n        name: 'Dog'\n      }, {\n        src: urls[10],\n        name: 'Dolphin'\n      }, {\n        src: urls[11],\n        name: 'Dolphin'\n      }, {\n        src: urls[12],\n        name: 'Fish'\n      }, {\n        src: urls[13],\n        name: 'Fish'\n      }, {\n        src: urls[14],\n        name: 'Fox'\n      }, {\n        src: urls[15],\n        name: 'Fox'\n      }, {\n        src: urls[16],\n        name: 'Frog'\n      }, {\n        src: urls[17],\n        name: 'Frog'\n      }];\n      console.log(animals);\n      shuffleArray();\n      setCards(animals);\n    }\n    getImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: cards.map((card, i) => /*#__PURE__*/_jsxDEV(Card, {\n        name: card.name,\n        number: i,\n        frontFace: card.src\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"M51NroWgc5aUEHiqsZiaQ+7WeWA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Card","jsxDEV","_jsxDEV","App","_s","cards","setCards","shuffleArray","array","i","length","j","Math","floor","random","temp","getImages","res","fetch","data","json","urls","entries","fields","image","url","animals","src","name","console","log","className","children","map","card","number","frontFace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Documentos/Reactjs/memory/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Card from './Components/Card';\t\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n\tconst [cards, setCards] = useState([]);\r\n\r\n\tconst shuffleArray = (array) => {\r\n\t    for (let i = array.length - 1; i > 0; i--) {\r\n\t      let j = Math.floor(Math.random() * (i + 1));\r\n\t      let temp = array[i];\r\n\t      array[i] = array[j];\r\n\t      array[j] = temp;\r\n\t    }\r\n  \t}\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function getImages() {\r\n  \t\t\tconst res = await fetch('https://fed-team.modyo.cloud/api/content/spaces/animals/types/game/entries?per_page=9');\r\n\t\t\tconst data = await res.json();\r\n\t\t\tlet urls = [];\r\n\t\t\tlet j = 0;\r\n\t\t\tfor (let i = 0; i < 18; ++i) {\r\n\t\t\t\tif (i != 0 && i != 1 && i % 2 == 0) ++j;\r\n\t\t\t\turls[i] = data.entries[j].fields.image.url;  \r\n\t\t\t}\r\n\t\t\tconst animals = [\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[0],\r\n\t\t\t\t  name: 'Bear'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[1],\r\n\t\t\t\t  name: 'Bear'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[2],\r\n\t\t\t\t  name: 'Bird'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[3],\r\n\t\t\t\t  name: 'Bird'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[4],\r\n\t\t\t\t  name: 'Cat'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[5],\r\n\t\t\t\t  name: 'Cat'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[6],\r\n\t\t\t\t  name: 'Deer'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[7],\r\n\t\t\t\t  name: 'Deer'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[8],\r\n\t\t\t\t  name: 'Dog'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[9],\r\n\t\t\t\t  name: 'Dog'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[10],\r\n\t\t\t\t  name: 'Dolphin'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[11],\r\n\t\t\t\t  name: 'Dolphin'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[12],\r\n\t\t\t\t  name: 'Fish'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[13],\r\n\t\t\t\t  name: 'Fish'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[14],\r\n\t\t\t\t  name: 'Fox'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[15],\r\n\t\t\t\t  name: 'Fox'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[16],\r\n\t\t\t\t  name: 'Frog'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[17],\r\n\t\t\t\t  name: 'Frog'\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t\tconsole.log(animals);\r\n\t\t\tshuffleArray()\r\n\t\t\tsetCards(animals);\r\n\t\t}\r\n\t\tgetImages();\t\t\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t<div className='cards-container'>\r\n\t\t\t\t{\r\n\t\t\t\t\tcards.map((card, i) => (\r\n\t\t\t\t\t\t<Card key={i} name={card.name} number={i} frontFace={card.src} />\r\n\t\t\t\t\t))\t\r\n\t\t\t\t}\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\t\t\r\n\t)\r\n\t\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}