{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\Reactjs\\\\memory\\\\src\\\\Components\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactCardFlip from 'react-card-flip';\nimport backFace from './images/question.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = _ref => {\n  _s();\n  let {\n    name,\n    number,\n    frontFace,\n    flipCard,\n    unflippedCards,\n    disabledCards\n  } = _ref;\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [hasEvent, setHasEvent] = useState(true);\n  useEffect(() => {\n    if (unflippedCards.includes(number)) {\n      // Si en el arreglo unflippedCards se encuentra incluido el número de la carta actual\n      setTimeout(() => setIsFlipped(false), 700); // Entonces la carta debe ir boca abajo\n    }\n  }, [unflippedCards]); // Este useEddect se va a ejecutar cada vez q unflippedCards sea modificado\n\n  useEffect(() => {\n    if (disabledCards.includes(number)) {\n      setHasEvent(false);\n    }\n  }, [disabledCards]);\n  const flip = e => {\n    const value = flipCard(name, number);\n    if (value !== 0) setIsFlipped(!isFlipped); // Voltea la carta solo si no es la misma que estamos volteando\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n      isFlipped: isFlipped,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: backFace,\n        alt: \"back-face\",\n        className: \"card-image\",\n        onClick: hasEvent ? flip : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: frontFace,\n        alt: \"back-face\",\n        className: \"card-image\",\n        onClick: hasEvent ? flip : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n_s(Card, \"oF6RSwSY2IvqCRIFpkw8ymDb/uQ=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","ReactCardFlip","backFace","jsxDEV","_jsxDEV","Card","_ref","_s","name","number","frontFace","flipCard","unflippedCards","disabledCards","isFlipped","setIsFlipped","hasEvent","setHasEvent","includes","setTimeout","flip","e","value","className","children","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Documentos/Reactjs/memory/src/Components/Card.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport backFace from './images/question.png';\r\n\r\nconst Card = ({ name, number, frontFace, flipCard, unflippedCards, disabledCards}) => {\r\n\r\n\tconst [isFlipped, setIsFlipped] = useState(false);\r\n\r\n\tconst [hasEvent, setHasEvent] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t    if (unflippedCards.includes(number)) { // Si en el arreglo unflippedCards se encuentra incluido el número de la carta actual\r\n\t    \tsetTimeout(() => setIsFlipped(false), 700);  // Entonces la carta debe ir boca abajo\r\n\t    }\r\n\t}, [unflippedCards])  // Este useEddect se va a ejecutar cada vez q unflippedCards sea modificado\r\n\r\n\tuseEffect(() => {\r\n\t    if (disabledCards.includes(number)) {\r\n\t      setHasEvent(false);\r\n\t    }\r\n\t}, [disabledCards])\r\n\r\n\tconst flip = e => {\r\n\t\tconst value = flipCard(name, number);\r\n\t\tif (value !== 0)\r\n\t\t\tsetIsFlipped(!isFlipped); // Voltea la carta solo si no es la misma que estamos volteando\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='card'>\r\n\t\t\t<ReactCardFlip isFlipped={ isFlipped }>\r\n\t\t\t\t<img src={ backFace } alt='back-face' className=\"card-image\" onClick={ hasEvent ? flip : null } />\t\r\n\t\t\t\t<img src={ frontFace } alt='back-face' className=\"card-image\" onClick={ hasEvent ? flip : null } />\t\r\n\t\t\t</ReactCardFlip>\r\n\t\t</div>\r\n\t)\t\r\n\r\n}\r\n\r\nexport default Card;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,IAAI,GAAGC,IAAA,IAAyE;EAAAC,EAAA;EAAA,IAAxE;IAAEC,IAAI;IAAEC,MAAM;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,cAAc;IAAEC;EAAa,CAAC,GAAAP,IAAA;EAEhF,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ,IAAIY,cAAc,CAACM,QAAQ,CAACT,MAAM,CAAC,EAAE;MAAE;MACtCU,UAAU,CAAC,MAAMJ,YAAY,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,CAAE;IAC9C;EACJ,CAAC,EAAE,CAACH,cAAc,CAAC,CAAC,EAAE;;EAEtBZ,SAAS,CAAC,MAAM;IACZ,IAAIa,aAAa,CAACK,QAAQ,CAACT,MAAM,CAAC,EAAE;MAClCQ,WAAW,CAAC,KAAK,CAAC;IACpB;EACJ,CAAC,EAAE,CAACJ,aAAa,CAAC,CAAC;EAEnB,MAAMO,IAAI,GAAGC,CAAC,IAAI;IACjB,MAAMC,KAAK,GAAGX,QAAQ,CAACH,IAAI,EAAEC,MAAM,CAAC;IACpC,IAAIa,KAAK,KAAK,CAAC,EACdP,YAAY,CAAC,CAACD,SAAS,CAAC,CAAC,CAAC;EAC5B,CAAC;;EAED,oBACCV,OAAA;IAAKmB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACpBpB,OAAA,CAACH,aAAa;MAACa,SAAS,EAAGA,SAAW;MAAAU,QAAA,gBACrCpB,OAAA;QAAKqB,GAAG,EAAGvB,QAAU;QAACwB,GAAG,EAAC,WAAW;QAACH,SAAS,EAAC,YAAY;QAACI,OAAO,EAAGX,QAAQ,GAAGI,IAAI,GAAG;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAClG3B,OAAA;QAAKqB,GAAG,EAAGf,SAAW;QAACgB,GAAG,EAAC,WAAW;QAACH,SAAS,EAAC,YAAY;QAACI,OAAO,EAAGX,QAAQ,GAAGI,IAAI,GAAG;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACpF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACX;AAGR,CAAC;AAAAxB,EAAA,CAjCKF,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AAmCV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}