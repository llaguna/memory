{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\Reactjs\\\\memory\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from './Components/Card';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [firstCard, setFirstCard] = useState({});\n  const [secondCard, setSecondCard] = useState({});\n  const [unflippedCards, setUnflippedCards] = useState([]); // Arreglo de los números de cartas que necesitan volver su posición inicial\n  const [disabledCards, setDisabledCards] = useState([]); // Arreglo de los números de cartas que necesitan ser deshabilitadas porque ya hicieron match \n\n  const [hits, setHits] = useState(0);\n  const [fault, setFaults] = useState(0);\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n  useEffect(() => {\n    async function getImages() {\n      const res = await fetch('https://fed-team.modyo.cloud/api/content/spaces/animals/types/game/entries?per_page=9');\n      const data = await res.json();\n      let urls = [];\n      let j = 0;\n      for (let i = 0; i < 18; ++i) {\n        if (i != 0 && i != 1 && i % 2 == 0) ++j;\n        urls[i] = data.entries[j].fields.image.url;\n      }\n      const images = [{\n        src: urls[0],\n        name: 'Bear'\n      }, {\n        src: urls[1],\n        name: 'Bear'\n      }, {\n        src: urls[2],\n        name: 'Bird'\n      }, {\n        src: urls[3],\n        name: 'Bird'\n      }, {\n        src: urls[4],\n        name: 'Cat'\n      }, {\n        src: urls[5],\n        name: 'Cat'\n      }, {\n        src: urls[6],\n        name: 'Deer'\n      }, {\n        src: urls[7],\n        name: 'Deer'\n      }, {\n        src: urls[8],\n        name: 'Dog'\n      }, {\n        src: urls[9],\n        name: 'Dog'\n      }, {\n        src: urls[10],\n        name: 'Dolphin'\n      }, {\n        src: urls[11],\n        name: 'Dolphin'\n      }, {\n        src: urls[12],\n        name: 'Fish'\n      }, {\n        src: urls[13],\n        name: 'Fish'\n      }, {\n        src: urls[14],\n        name: 'Fox'\n      }, {\n        src: urls[15],\n        name: 'Fox'\n      }, {\n        src: urls[16],\n        name: 'Frog'\n      }, {\n        src: urls[17],\n        name: 'Frog'\n      }];\n      shuffleArray(images);\n      setCards(images);\n    }\n    getImages();\n  }, []);\n  useEffect(() => {\n    checkForMatch();\n  }, [secondCard]); // Este useEffect se va a ejecutar cada vez que secondCard sea modificado\n\n  const flipCard = (name, number) => {\n    if (firstCard.name == name && firstCard.number == number)\n      // Se intenta voltear la misma carta\n      return 0;\n    if (!firstCard.name)\n      // Aún no se ha volteado la primera carta\n      setFirstCard({\n        name,\n        number\n      });else if (!secondCard.name)\n      // Se ha volteado la primera carta pero aún no se ha volteado la segunda carta\n      setSecondCard({\n        name,\n        number\n      });\n    return 1; // Devolverá 1 para los demás casos solo puede ser que tanto la primera como la segunda fueron volteadas\n  };\n\n  const checkForMatch = () => {\n    if (firstCard.name && secondCard.name) {\n      // Verifica primero que no sean vacías estas variables ya que al principio están vacías\n      const match = firstCard.name == secondCard.name;\n      match ? disableCards() : unflipCards();\n      if (match) {\n        disableCards();\n      } else {\n        unflipCards();\n      }\n    }\n  };\n  const resetCards = () => {\n    setFirstCard({});\n    setSecondCard({});\n  };\n  const unflipCards = () => {\n    setUnflippedCards([firstCard.number, secondCard.number]);\n    resetCards();\n  };\n  const disableCards = () => {\n    setDisabledCards([firstCard.number, secondCard.number]);\n    resetCards();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: cards.map((card, i) => /*#__PURE__*/_jsxDEV(Card, {\n        name: card.name,\n        number: i,\n        frontFace: card.src,\n        flipCard: flipCard,\n        unflippedCards: unflippedCards,\n        disabledCards: disabledCards\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"wTl8s0bwUw7Fde5NNKCOSCZbjrc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Card","jsxDEV","_jsxDEV","App","_s","cards","setCards","firstCard","setFirstCard","secondCard","setSecondCard","unflippedCards","setUnflippedCards","disabledCards","setDisabledCards","hits","setHits","fault","setFaults","shuffleArray","array","i","length","j","Math","floor","random","temp","getImages","res","fetch","data","json","urls","entries","fields","image","url","images","src","name","checkForMatch","flipCard","number","match","disableCards","unflipCards","resetCards","className","children","map","card","frontFace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Documentos/Reactjs/memory/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Card from './Components/Card';\t\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n\tconst [cards, setCards] = useState([]);\r\n\r\n\tconst [firstCard, setFirstCard] = useState({});\r\n  \tconst [secondCard, setSecondCard] = useState({});\r\n\r\n  \tconst [unflippedCards, setUnflippedCards] = useState([]); // Arreglo de los números de cartas que necesitan volver su posición inicial\r\n  \tconst [disabledCards, setDisabledCards] = useState([]);  // Arreglo de los números de cartas que necesitan ser deshabilitadas porque ya hicieron match \r\n\r\n  \tconst [hits, setHits] = useState(0);\r\n  \tconst [fault, setFaults] = useState(0);\r\n\r\n\tconst shuffleArray = (array) => {\r\n\t    for (let i = array.length - 1; i > 0; i--) {\r\n\t      let j = Math.floor(Math.random() * (i + 1));\r\n\t      let temp = array[i];\r\n\t      array[i] = array[j];\r\n\t      array[j] = temp;\r\n\t    }\r\n  \t}\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function getImages() {\r\n  \t\t\tconst res = await fetch('https://fed-team.modyo.cloud/api/content/spaces/animals/types/game/entries?per_page=9');\r\n\t\t\tconst data = await res.json();\r\n\t\t\tlet urls = [];\r\n\t\t\tlet j = 0;\r\n\t\t\tfor (let i = 0; i < 18; ++i) {\r\n\t\t\t\tif (i != 0 && i != 1 && i % 2 == 0) ++j;\r\n\t\t\t\turls[i] = data.entries[j].fields.image.url;  \r\n\t\t\t}\r\n\t\t\tconst images = [\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[0],\r\n\t\t\t\t  name: 'Bear'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[1],\r\n\t\t\t\t  name: 'Bear'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[2],\r\n\t\t\t\t  name: 'Bird'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[3],\r\n\t\t\t\t  name: 'Bird'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[4],\r\n\t\t\t\t  name: 'Cat'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[5],\r\n\t\t\t\t  name: 'Cat'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[6],\r\n\t\t\t\t  name: 'Deer'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[7],\r\n\t\t\t\t  name: 'Deer'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[8],\r\n\t\t\t\t  name: 'Dog'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[9],\r\n\t\t\t\t  name: 'Dog'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[10],\r\n\t\t\t\t  name: 'Dolphin'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[11],\r\n\t\t\t\t  name: 'Dolphin'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[12],\r\n\t\t\t\t  name: 'Fish'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[13],\r\n\t\t\t\t  name: 'Fish'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[14],\r\n\t\t\t\t  name: 'Fox'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[15],\r\n\t\t\t\t  name: 'Fox'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[16],\r\n\t\t\t\t  name: 'Frog'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  src: urls[17],\r\n\t\t\t\t  name: 'Frog'\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t\tshuffleArray(images);\r\n\t\t\tsetCards(images);\r\n\t\t}\r\n\t\tgetImages();\t\t\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n    \tcheckForMatch();\r\n  \t}, [secondCard]);  // Este useEffect se va a ejecutar cada vez que secondCard sea modificado\r\n\r\n\tconst flipCard = (name, number) => {\r\n\t    if (firstCard.name == name && firstCard.number == number) // Se intenta voltear la misma carta\r\n\t      \treturn 0;\r\n\t    if (!firstCard.name)  // Aún no se ha volteado la primera carta\r\n\t    \tsetFirstCard({ name, number });\r\n\t    else if (!secondCard.name)  // Se ha volteado la primera carta pero aún no se ha volteado la segunda carta\r\n\t      \tsetSecondCard({ name, number });\r\n\t    return 1; // Devolverá 1 para los demás casos solo puede ser que tanto la primera como la segunda fueron volteadas\r\n\t}\r\n\r\n\tconst checkForMatch = () => {\r\n\t\tif (firstCard.name && secondCard.name) { // Verifica primero que no sean vacías estas variables ya que al principio están vacías\r\n\t\t\tconst match = firstCard.name == secondCard.name;\r\n\t\t\tmatch ? disableCards() : unflipCards();\r\n\t\t\tif (match) {\r\n\t\t\t\tdisableCards();\r\n\r\n\t\t\t} else {\r\n\t\t\t\tunflipCards();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst resetCards = () => {\r\n    \tsetFirstCard({});\r\n    \tsetSecondCard({});\r\n  \t}\r\n\r\n  \tconst unflipCards = () => {\r\n  \t\tsetUnflippedCards([firstCard.number, secondCard.number]);\r\n\t    resetCards();\r\n\t};\r\n\r\n\tconst disableCards = () => {\r\n\t\tsetDisabledCards([firstCard.number, secondCard.number]);\r\n\t    resetCards();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t<div className='cards-container'>\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tcards.map((card, i) => (\r\n\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\tname={card.name} \r\n\t\t\t\t\t\t\tnumber={i} \r\n\t\t\t\t\t\t\tfrontFace={card.src} \r\n\t\t\t\t\t\t\tflipCard={flipCard} \r\n\t\t\t\t\t\t\tunflippedCards={unflippedCards}\r\n              \t\t\t\tdisabledCards={disabledCards}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\t\r\n\t\t\t\t}\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\t\t\r\n\t)\r\n\t\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}