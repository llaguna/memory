{"ast":null,"code":"var _jsxFileName = \"C:\\\\react_projects\\\\memorynew\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from './Components/Card';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [name, setName] = useState('');\n  const [gameState, setGameState] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [firstCard, setFirstCard] = useState({});\n  const [secondCard, setSecondCard] = useState({});\n  const [unflippedCards, setUnflippedCards] = useState([]); // Arreglo de los números de cartas que necesitan volver su posición inicial\n  const [disabledCards, setDisabledCards] = useState([]); // Arreglo de los números de cartas que necesitan ser deshabilitadas porque ya hicieron match \n\n  const [hits, setHits] = useState(0);\n  const [miss, setMiss] = useState(0);\n  useEffect(() => {\n    async function getImages() {\n      const res = await fetch('https://fed-team.modyo.cloud/api/content/spaces/animals/types/game/entries?per_page=20');\n      const data = await res.json();\n      let urls = [];\n      let content = [];\n      data[\"entries\"].forEach(obj => {\n        urls.push(obj.fields.image.url);\n      });\n      for (let i = 0; i < 18; i++) {\n        content.push(urls[0]);\n        if (i % 2 == 1) {\n          urls.splice(0, 1);\n        }\n      }\n      content.sort(() => Math.random() - 0.5); // Desordeno el arreglo\n      setCards(content);\n    }\n    getImages();\n  }, []);\n  useEffect(() => {\n    checkForMatch();\n  }, [secondCard]); // Este useEffect se va a ejecutar cada vez que secondCard sea modificado\n\n  const flipCard = (name, number) => {\n    if (firstCard.name === name && firstCard.number == number)\n      // Se intenta voltear la misma carta\n      return 0;\n    if (!firstCard.name)\n      // Aún no se ha volteado la primera carta\n      setFirstCard({\n        name,\n        number\n      });else if (!secondCard.name)\n      // Se ha volteado la primera carta pero aún no se ha volteado la segunda carta\n      setSecondCard({\n        name,\n        number\n      });\n    return 1; // Devolverá 1 para los demás casos solo puede ser que tanto la primera como la segunda fueron volteadas\n  };\n\n  const checkForMatch = () => {\n    if (firstCard.name && secondCard.name) {\n      // Verifica primero que no sean vacías estas variables ya que al principio están vacías\n      const match = firstCard.name === secondCard.name;\n      if (match) {\n        disableCards();\n        setHits(hits + 1);\n      } else {\n        unflipCards();\n        setMiss(miss + 1);\n      }\n    }\n  };\n  const resetCards = () => {\n    setFirstCard({});\n    setSecondCard({});\n  };\n  const unflipCards = () => {\n    setUnflippedCards([firstCard.number, secondCard.number]);\n    resetCards();\n  };\n  const disableCards = () => {\n    setDisabledCards([firstCard.number, secondCard.number]);\n    resetCards();\n  };\n  const start = () => {\n    if (name != '') {\n      setGameState(true);\n    } else {\n      alert('Please add a name');\n    }\n  };\n  if (!gameState) {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form_stargame\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn active btn-primary btn-lg|btn-sm\",\n        children: \"Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        autoFocus: true,\n        className: \"login-form_inputname\",\n        placeholder: \"Type your name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-form_buttonlogin\",\n        onClick: start,\n        children: \"Start game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"HITS: \", hits]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"MISS: \", miss]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: hits === 9 ? `Felicitaciones ${name}` : ``\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-container\",\n        children: cards.map((card, i) => /*#__PURE__*/_jsxDEV(Card, {\n          name: card,\n          number: i,\n          frontFace: card,\n          flipCard: flipCard,\n          unflippedCards: unflippedCards,\n          disabledCards: disabledCards\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"InCxbHFdkawYxLdDwcOv5vAlniM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Card","jsxDEV","_jsxDEV","App","_s","name","setName","gameState","setGameState","cards","setCards","firstCard","setFirstCard","secondCard","setSecondCard","unflippedCards","setUnflippedCards","disabledCards","setDisabledCards","hits","setHits","miss","setMiss","getImages","res","fetch","data","json","urls","content","forEach","obj","push","fields","image","url","i","splice","sort","Math","random","checkForMatch","flipCard","number","match","disableCards","unflipCards","resetCards","start","alert","className","children","type","fileName","_jsxFileName","lineNumber","columnNumber","id","autoFocus","placeholder","onChange","e","target","value","onClick","map","card","frontFace","_c","$RefreshReg$"],"sources":["C:/react_projects/memorynew/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Card from './Components/Card';\t\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n\r\n\tconst [name, setName] = useState('');\r\n\tconst [gameState, setGameState] = useState(false);\r\n\r\n\tconst [cards, setCards] = useState([]);\r\n\r\n\tconst [firstCard, setFirstCard] = useState({});\r\n  \tconst [secondCard, setSecondCard] = useState({});\r\n\r\n  \tconst [unflippedCards, setUnflippedCards] = useState([]); // Arreglo de los números de cartas que necesitan volver su posición inicial\r\n  \tconst [disabledCards, setDisabledCards] = useState([]);  // Arreglo de los números de cartas que necesitan ser deshabilitadas porque ya hicieron match \r\n\r\n  \tconst [hits, setHits] = useState(0);\r\n  \tconst [miss, setMiss] = useState(0);\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function getImages() {\r\n  \t\t\tconst res = await fetch('https://fed-team.modyo.cloud/api/content/spaces/animals/types/game/entries?per_page=20');\r\n\t\t\tconst data = await res.json();\r\n\t\t\tlet urls = [];\r\n\t  \t\tlet content = [];\r\n\r\n\r\n\t\t\tdata[\"entries\"].forEach((obj) => {\r\n\t\t\t  urls.push(obj.fields.image.url);\r\n\t\t\t});\r\n\r\n \t\t\tfor (let i = 0; i < 18; i++){\r\n \t\t\t\tcontent.push(urls[0])\r\n \t\t\t\tif (i % 2 == 1) {\r\n \t\t\t\t  urls.splice(0, 1);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tcontent.sort(() => Math.random() - 0.5); // Desordeno el arreglo\r\n\t\t\tsetCards(content);\r\n\t\t}\r\n\t\tgetImages();\t\t\r\n\t}, [])\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n    \tcheckForMatch();\r\n  \t}, [secondCard]);  // Este useEffect se va a ejecutar cada vez que secondCard sea modificado\r\n\r\n\tconst flipCard = (name, number) => {\r\n\t    if (firstCard.name === name && firstCard.number == number) // Se intenta voltear la misma carta\r\n\t      \treturn 0;\r\n\t    if (!firstCard.name)  // Aún no se ha volteado la primera carta\r\n\t    \tsetFirstCard({ name, number });\r\n\t    else if (!secondCard.name)  // Se ha volteado la primera carta pero aún no se ha volteado la segunda carta\r\n\t      \tsetSecondCard({ name, number });\r\n\t    return 1; // Devolverá 1 para los demás casos solo puede ser que tanto la primera como la segunda fueron volteadas\r\n\t}\r\n\r\n\tconst checkForMatch = () => {\r\n\t\tif (firstCard.name && secondCard.name) { // Verifica primero que no sean vacías estas variables ya que al principio están vacías\r\n\t\t\tconst match = firstCard.name === secondCard.name;\r\n\t\t\tif (match) {\r\n\t\t\t\tdisableCards();\r\n\t\t\t\tsetHits(hits + 1);\r\n\t\t\t} else {\r\n\t\t\t\tunflipCards();\r\n\t\t\t\tsetMiss(miss + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst resetCards = () => {\r\n    \tsetFirstCard({});\r\n    \tsetSecondCard({});\r\n  \t}\r\n\r\n  \tconst unflipCards = () => {\r\n  \t\tsetUnflippedCards([firstCard.number, secondCard.number]);\r\n\t    resetCards();\r\n\t};\r\n\r\n\tconst disableCards = () => {\r\n\t\tsetDisabledCards([firstCard.number, secondCard.number]);\r\n\t    resetCards();\r\n\t};\r\n\r\n\tconst start = () => {\r\n        if(name != ''){\r\n            setGameState(true);\r\n        }else{\r\n            alert('Please add a name')\r\n        }\r\n\t}\r\n\r\n\tif (!gameState) {\r\n\t\treturn (\r\n\t\t\t<form className=\"login-form_stargame\">\r\n            <button type=\"button\" className=\"btn active btn-primary btn-lg|btn-sm\">Button</button>\r\n\t\t\t\t<input type='text' id=\"name\" autoFocus className=\"login-form_inputname\" placeholder='Type your name' onChange={ (e) => setName(e.target.value) } />\r\n\t\t\t\t<button type=\"submit\" className=\"login-form_buttonlogin\" onClick={ start }>Start game</button>\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"element-info\">\r\n\t\t\t\t<h2>HITS: { hits }</h2>\r\n\t\t\t\t<h2>MISS: { miss }</h2>\t\r\n\t\t\t\t<h3>{ hits === 9 ? `Felicitaciones ${ name }` : ``}</h3>\t\t\t\r\n\t\t\t</div>\t\t\r\n\t\t\t<div className='app'>\r\n\t\t\t\t\t\r\n\t\t\t\t<div className='cards-container'>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcards.map((card, i) => (\r\n\t\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\t\tname={card}\r\n\t\t\t\t\t\t\t\tnumber={i} \r\n\t\t\t\t\t\t\t\tfrontFace={card}\r\n\t\t\t\t\t\t\t\tflipCard={flipCard} \r\n\t\t\t\t\t\t\t\tunflippedCards={unflippedCards}\r\n\t              \t\t\t\tdisabledCards={disabledCards}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))\t\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\t\t\r\n\t)\r\n\t\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}